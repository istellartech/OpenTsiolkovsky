name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Build
        run: cargo build --locked
      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: fmt
        run: cargo fmt --all -- --check
      - name: Test
        run: cargo test --locked

  legacy_cpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: legacy_cpp
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libboost-dev
      - name: Build legacy C++
        run: |
          make
          ./bin/OpenTsiolkovsky ../examples/param_sample_01.json || true

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build WASM
        run: |
          wasm-pack build --target web --features wasm
          cp pkg/*.js pkg/*.wasm pkg/*.d.ts frontend/src/wasm/
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
        working-directory: frontend
      - name: Type check
        run: bunx tsc --noEmit
        working-directory: frontend
      - name: Build
        run: bun run build
        working-directory: frontend

